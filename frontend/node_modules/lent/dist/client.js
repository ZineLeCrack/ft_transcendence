/*!
* lent v1.5.4
* (c) 2022 zrrz
* @license MIT
*/
const dataMap = new Map();
const importNewFile = (hotModule) => {
    import(`${hotModule}?import&t=${Date.now()}`).then(() => {
        console.log(`[lent hmr] hot update file ${hotModule}`);
        dataMap.get(hotModule)?.();
    });
};
(() => {
    console.log('[lent] connecting...');
    const ws = new WebSocket('ws://localhost:replace_socket_url');
    ws.addEventListener('open', () => {
        console.log('[lent] connected');
    });
    ws.addEventListener('message', (msg) => {
        try {
            const { hotModule, hot } = JSON.parse(msg.data);
            if (hot) {
                const getParents = hotModule.parent.filter((v) => dataMap.has(v));
                const findLatelyHotParent = getParents[getParents.length - 1];
                // eslint-disable-next-line no-empty
                if (hotModule.fileName && dataMap.has(hotModule.fileName)) {
                    importNewFile(hotModule.fileName);
                }
                else if (findLatelyHotParent) {
                    importNewFile(findLatelyHotParent);
                }
                else {
                    window.location.reload();
                }
            }
        }
        catch (error) {
            console.log(console.log('[lent] message error'));
        }
    });
})();
const createHotContext = (requestFileName) => {
    return {
        accept(callback) {
            if (!dataMap.has(requestFileName)) {
                dataMap.set(requestFileName, callback);
            }
        }
    };
};

export { createHotContext };
