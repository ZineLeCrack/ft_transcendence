export declare type MiddlewareNext<T = any> = ExpectLink<T>['running'];
interface ExpectFn<T> {
    (value: T, next: MiddlewareNext<T>): any;
}
declare class ExpectLink<T = any> {
    expect: ExpectFn<T>;
    next: ExpectLink<T> | null;
    running(value?: any): any;
}
export declare class ComposeLink<T> {
    private prev;
    private head;
    private value;
    constructor(value?: T);
    use(fn: ExpectFn<T>): this;
    run(value?: T): any;
}
export {};
